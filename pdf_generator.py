from reportlab.platypus import SimpleDocTemplate, Table, TableStyle, Paragraph, Spacer, Image
from reportlab.lib import colors
from reportlab.lib.pagesizes import A4
from reportlab.lib.styles import getSampleStyleSheet
from reportlab.lib.units import mm
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —à—Ä–∏—Ñ—Ç —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –∫–∏—Ä–∏–ª–ª–∏—Ü—ã
pdfmetrics.registerFont(TTFont('DejaVu', 'DejaVuSans.ttf'))

def generate_import_pdf(breakdown, result, buffer):
    doc = SimpleDocTemplate(buffer, pagesize=A4)
    styles = getSampleStyleSheet()
    styles["Title"].fontName = 'DejaVu'
    styles["Normal"].fontName = 'DejaVu'

    elements = []

    # –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø
    try:
        logo = Image("logo.png", width=100, height=50)  # –£–∫–∞–∂–∏ –ø—É—Ç—å –∏ —Ä–∞–∑–º–µ—Ä—ã –ª–æ–≥–æ—Ç–∏–ø–∞
        elements.append(logo)
        elements.append(Spacer(1, 12))
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ª–æ–≥–æ—Ç–∏–ø–∞: {e}")

    elements.append(Paragraph("üöó <b>–§–∏–Ω–∞–ª—å–Ω—ã–π —Ä–∞—Å—á—ë—Ç –ø–æ –∏–º–ø–æ—Ä—Ç—É –∞–≤—Ç–æ</b>", styles["Title"]))
    elements.append(Spacer(1, 12))

    table_data = [["<b>–ü–∞—Ä–∞–º–µ—Ç—Ä</b>", "<b>–ó–Ω–∞—á–µ–Ω–∏–µ</b>"]]
    for k, v in breakdown.items():
        val = f"${v:,.0f}" if isinstance(v, (int, float)) and "–ì–æ–¥" not in k else v
        table_data.append([k, val])
    table_data.append(["<b>–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞</b>", f"<b>${result:,.0f}</b>"])

    table = Table(table_data, colWidths=[110*mm, 60*mm])
    table.setStyle(TableStyle([
        ("BACKGROUND", (0, 0), (-1, 0), colors.lightblue),
        ("TEXTCOLOR", (0, 0), (-1, 0), colors.black),
        ("ALIGN", (1, 1), (-1, -1), "RIGHT"),
        ("FONTNAME", (0, 0), (-1, -1), 'DejaVu'),
        ("BOTTOMPADDING", (0, 0), (-1, 0), 10),
        ("GRID", (0, 0), (-1, -1), 0.25, colors.grey),
    ]))

    elements.append(table)
    doc.build(elements)